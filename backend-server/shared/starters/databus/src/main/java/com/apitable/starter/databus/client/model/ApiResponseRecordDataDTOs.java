/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ApiResponseRecordDataDTOs
 */
@JsonPropertyOrder({
  ApiResponseRecordDataDTOs.JSON_PROPERTY_TOTAL,
  ApiResponseRecordDataDTOs.JSON_PROPERTY_RECORDS,
  ApiResponseRecordDataDTOs.JSON_PROPERTY_PAGENUM,
  ApiResponseRecordDataDTOs.JSON_PROPERTY_PAGESIZE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApiResponseRecordDataDTOs {
  public static final String JSON_PROPERTY_TOTAL = "total";
  private Integer total;

  public static final String JSON_PROPERTY_RECORDS = "records";
  private List<RecordDTO> records;

  public static final String JSON_PROPERTY_PAGENUM = "pageNum";
  private Integer pageNum;

  public static final String JSON_PROPERTY_PAGESIZE = "pageSize";
  private Integer pageSize;

  public ApiResponseRecordDataDTOs() {
  }

  public ApiResponseRecordDataDTOs total(Integer total) {
    this.total = total;
    return this;
  }
   /**
   * Get total
   * minimum: 0
   * @return total
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(Integer total) {
    this.total = total;
  }


  public ApiResponseRecordDataDTOs records(List<RecordDTO> records) {
    
    this.records = records;
    return this;
  }

  public ApiResponseRecordDataDTOs addRecord(RecordDTO record) {
    if (this.records == null) {
      this.records = new ArrayList<>();
    }
    this.records.add(record);
    return this;
  }

   /**
   * Get records
   * @return records
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RecordDTO> getRecords() {
    return records;
  }


  @JsonProperty(JSON_PROPERTY_RECORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecords(List<RecordDTO> records) {
    this.records = records;
  }


  public ApiResponseRecordDataDTOs pageNum(Integer pageNum) {
    
    this.pageNum = pageNum;
    return this;
  }

   /**
   * Get pageNum
   * @return pageNum
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAGENUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPageNum() {
    return pageNum;
  }


  @JsonProperty(JSON_PROPERTY_PAGENUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPageNum(Integer pageNum) {
    this.pageNum = pageNum;
  }


  public ApiResponseRecordDataDTOs pageSize(Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAGESIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPageSize() {
    return pageSize;
  }


  @JsonProperty(JSON_PROPERTY_PAGESIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiResponseRecordDataDTOs apiResponseRecordDataDTOs = (ApiResponseRecordDataDTOs) o;
    return Objects.equals(this.total, apiResponseRecordDataDTOs.total) &&
        Objects.equals(this.records, apiResponseRecordDataDTOs.records) &&
        Objects.equals(this.pageNum, apiResponseRecordDataDTOs.pageNum) &&
        Objects.equals(this.pageSize, apiResponseRecordDataDTOs.pageSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, records, pageNum, pageSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiResponseRecordDataDTOs {\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    records: ").append(toIndentedString(records)).append("\n");
    sb.append("    pageNum: ").append(toIndentedString(pageNum)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

